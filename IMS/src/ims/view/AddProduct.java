/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ims.view;

import ims.common.ComboSearch;
import ims.common.Validations;
import ims.controller.BrandController;
import ims.controller.CategoryController;
import ims.controller.ProductController;
import ims.controller.ProductTypeController;
import ims.controller.SupplierController;
import ims.model.Product;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chamath
 */
public class AddProduct extends javax.swing.JInternalFrame {

    private ProductController productController;
    private BrandController brandController;
    private CategoryController categoryController;
    private ProductTypeController productTypeController;
    private SupplierController supplierController;
    private DefaultTableModel dtm = null;
    private Vector dtmVector = null;
    private Validations validations;

    /**
     * Creates new form AddProduct
     */
    public AddProduct() {
        initComponents();
        productController = new ProductController();
        brandController = new BrandController();
        categoryController = new CategoryController();
        productTypeController = new ProductTypeController();
        supplierController = new SupplierController();
        validations = new Validations();

        txtSafetyStockLevel.setEditable(true);

        try {
            String newId = productController.getNewId();
            txtProductId.setText(newId);

            ArrayList<String> allBrandNames = brandController.getAllBrandNames();
            cmbBrandName.setModel(new DefaultComboBoxModel(allBrandNames.toArray()));

            ArrayList<String> allCategoryNames = categoryController.getAllCategoryNames();
            cmbCategoryName.setModel(new DefaultComboBoxModel(allCategoryNames.toArray()));

            ArrayList<String> allProductTypeNames = productTypeController.getAllProductTypeNames();
            cmbProductType.setModel(new DefaultComboBoxModel(allProductTypeNames.toArray()));

            ArrayList<String> allSupplierID = supplierController.getAllSupplierId();
            cmbSupplierId.setModel(new DefaultComboBoxModel(allSupplierID.toArray()));

            ComboSearch comboSearch1 = new ComboSearch();
            comboSearch1.search(cmbBrandName, true, "No brands found");
            ComboSearch comboSearch2 = new ComboSearch();
            comboSearch2.search(cmbCategoryName, true, "No category found");
            ComboSearch comboSearch3 = new ComboSearch();
            comboSearch3.search(cmbProductType, true, "No product type found");
            ComboSearch comboSearch4 = new ComboSearch();
            comboSearch4.search(cmbProductType, true, "No suppliers found");

            cmbBrandName.setSelectedIndex(-1);
            cmbCategoryName.setSelectedIndex(-1);
            cmbProductType.setSelectedIndex(-1);
            cmbSupplierId.setSelectedIndex(-1);

            ArrayList<Product> allProducts = productController.getAllProducts();
            dtm = (DefaultTableModel) table.getModel();
            for (Product product : allProducts) {
                dtm.addRow(new Object[]{product.getId(), product.getName(), product.getCid(), product.getBid(), product.getPtid(), product.getSid(), product.getSaftyStock()});
            }

            dtmVector = (Vector) dtm.getDataVector().clone();

        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        txtSafetyStockLevel = new javax.swing.JTextField();
        cmbCategoryName = new javax.swing.JComboBox<>();
        cmbProductType = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtSearchProduct = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        cmbBrandName = new javax.swing.JComboBox<>();
        txtProductId = new javax.swing.JTextField();
        cmbSupplierId = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Add Product");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(461, 461, 461)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Brand Name :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Product ID :");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Category Name :");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Product Name :");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Product Type :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Supplier ID :");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Safety Stock Level :");

        txtProductName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtSafetyStockLevel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSafetyStockLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSafetyStockLevelActionPerformed(evt);
            }
        });
        txtSafetyStockLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSafetyStockLevelKeyReleased(evt);
            }
        });

        cmbCategoryName.setEditable(true);
        cmbCategoryName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmbCategoryName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbCategoryNameKeyReleased(evt);
            }
        });

        cmbProductType.setEditable(true);
        cmbProductType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmbProductType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductTypeActionPerformed(evt);
            }
        });
        cmbProductType.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbProductTypeKeyReleased(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Category Name", "Brand Name", "Product Type", "Supplier ID", "Safty Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        txtSearchProduct.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchProductActionPerformed(evt);
            }
        });
        txtSearchProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchProductKeyReleased(evt);
            }
        });

        btnSave.setBackground(new java.awt.Color(102, 102, 255));
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(102, 102, 255));
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("EDIT");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(255, 0, 51));
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("CANCEL");
        btnCancel.setActionCommand("CLEAR");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        cmbBrandName.setEditable(true);
        cmbBrandName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmbBrandName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbBrandNameKeyReleased(evt);
            }
        });

        txtProductId.setEditable(false);
        txtProductId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        cmbSupplierId.setEditable(true);
        cmbSupplierId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmbSupplierId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSupplierIdActionPerformed(evt);
            }
        });
        cmbSupplierId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cmbSupplierIdKeyReleased(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(102, 102, 255));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtProductId))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel6))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(53, 53, 53)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cmbProductType, javax.swing.GroupLayout.Alignment.LEADING, 0, 268, Short.MAX_VALUE)
                                    .addComponent(cmbBrandName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbCategoryName, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbSupplierId, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSafetyStockLevel, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtProductName))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(txtSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(cmbCategoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cmbBrandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cmbProductType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cmbSupplierId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSafetyStockLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchProductActionPerformed

    private void cmbProductTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProductTypeActionPerformed

    private void txtSafetyStockLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSafetyStockLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSafetyStockLevelActionPerformed

    private void cmbBrandNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbBrandNameKeyReleased

    }//GEN-LAST:event_cmbBrandNameKeyReleased

    private void cmbCategoryNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbCategoryNameKeyReleased

    }//GEN-LAST:event_cmbCategoryNameKeyReleased

    private void cmbProductTypeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbProductTypeKeyReleased

    }//GEN-LAST:event_cmbProductTypeKeyReleased

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String pid = txtProductId.getText();
        String name = txtProductName.getText();
        String cid = String.valueOf(cmbCategoryName.getSelectedItem());
        String bid = String.valueOf(cmbBrandName.getSelectedItem());
        String ptid = String.valueOf(cmbProductType.getSelectedItem());
        String sid = String.valueOf(cmbSupplierId.getSelectedItem());

        if (!name.equals("") && cmbCategoryName.getSelectedIndex() != -1 && cmbBrandName.getSelectedIndex() != -1 && cmbProductType.getSelectedIndex() != -1 && cmbSupplierId.getSelectedIndex() != -1 && !txtSafetyStockLevel.getText().equals("")) {

            int safetyStock = Integer.valueOf(txtSafetyStockLevel.getText());

            Product product1 = new Product(pid, name, cid, bid, ptid, sid, safetyStock);
            try {
                if (productController.ifExist(pid)) {
                    int result = productController.updateProduct(product1);
                    if (result > 0) {
                        JOptionPane.showMessageDialog(this, "Product Update successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                        txtProductId.setText(productController.getNewId());
                        txtProductName.setText("");
                        cmbBrandName.setSelectedIndex(-1);
                        cmbCategoryName.setSelectedIndex(-1);
                        cmbProductType.setSelectedIndex(-1);
                        cmbSupplierId.setSelectedIndex(-1);
                        txtSafetyStockLevel.setText("");
                        txtSafetyStockLevel.setEditable(true);

                        ArrayList<Product> allProducts = productController.getAllProducts();
                        dtm = (DefaultTableModel) table.getModel();
                        dtm.setRowCount(0);
                        for (Product product : allProducts) {
                            dtm.addRow(new Object[]{product.getId(), product.getName(), product.getCid(), product.getBid(), product.getPtid(), product.getSid(), product.getSaftyStock()});
                        }
                        dtmVector = (Vector) dtm.getDataVector().clone();
                    } else {
                        JOptionPane.showMessageDialog(this, "Product Update failed", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } else if (productController.getIdByName(name).equals("")) {
                    int result = productController.addProduct(product1);
                    if (result > 0) {
                        JOptionPane.showMessageDialog(this, "Product added successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                        txtProductId.setText(productController.getNewId());
                        txtProductName.setText("");
                        cmbBrandName.setSelectedIndex(-1);
                        cmbCategoryName.setSelectedIndex(-1);
                        cmbProductType.setSelectedIndex(-1);
                        cmbSupplierId.setSelectedIndex(-1);
                        txtSafetyStockLevel.setText("");

                        ArrayList<Product> allProducts = productController.getAllProducts();
                        dtm = (DefaultTableModel) table.getModel();
                        dtm.setRowCount(0);
                        for (Product product : allProducts) {
                            dtm.addRow(new Object[]{product.getId(), product.getName(), product.getCid(), product.getBid(), product.getPtid(), product.getSid(), product.getSaftyStock()});
                        }
                        dtmVector = (Vector) dtm.getDataVector().clone();
                    } else {
                        JOptionPane.showMessageDialog(this, "Product added failed", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Product "+name+" is already exist", "Failed", JOptionPane.ERROR_MESSAGE);
                    txtProductName.requestFocus();
                }
            } catch (SQLException | ClassNotFoundException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fill all the fields first", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtSearchProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchProductKeyReleased
        searchTableContents(txtSearchProduct.getText());
    }//GEN-LAST:event_txtSearchProductKeyReleased

    private void cmbSupplierIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSupplierIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSupplierIdActionPerformed

    private void cmbSupplierIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbSupplierIdKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSupplierIdKeyReleased

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (dtm == null || dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Product table is empty", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (table.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row first", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                int selectedRow = table.getSelectedRow();
                String id = String.valueOf(table.getValueAt(selectedRow, 0));
                String name = String.valueOf(table.getValueAt(selectedRow, 1));
                String cName = String.valueOf(table.getValueAt(selectedRow, 2));
                String bName = String.valueOf(table.getValueAt(selectedRow, 3));
                String pType = String.valueOf(table.getValueAt(selectedRow, 4));
                String sid = String.valueOf(table.getValueAt(selectedRow, 5));

                Product product = productController.getProduct(id);
                int saftyStock = product.getSaftyStock();

                txtProductId.setText(id);
                txtProductName.setText(name);
                cmbBrandName.setSelectedItem(bName);
                cmbCategoryName.setSelectedItem(cName);
                cmbProductType.setSelectedItem(pType);
                cmbSupplierId.setSelectedItem(sid);
                txtSafetyStockLevel.setText(String.valueOf(saftyStock));
                txtSafetyStockLevel.setEditable(false);

            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(AddProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (dtm == null || dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Product table is empty", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (table.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Select a row first", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                int selectedRow = table.getSelectedRow();
                String id = String.valueOf(table.getValueAt(selectedRow, 0));

                int result = productController.deleteProduct(id);
                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Delete Sucess", "success", JOptionPane.INFORMATION_MESSAGE);

                    dtm.setRowCount(0);
                    ArrayList<Product> allProducts = productController.getAllProducts();
                    dtm = (DefaultTableModel) table.getModel();
                    for (Product product : allProducts) {
                        dtm.addRow(new Object[]{product.getId(), product.getName(), product.getCid(), product.getBid(), product.getPtid(), product.getSid(), product.getSaftyStock()});
                    }

                    dtmVector = (Vector) dtm.getDataVector().clone();
                } else {
                    JOptionPane.showMessageDialog(this, "Delete Filed", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(CustomerRecords.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtSafetyStockLevelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSafetyStockLevelKeyReleased
        String text = txtSafetyStockLevel.getText().replaceAll("[\\D]", "");
        txtSafetyStockLevel.setText(text);
    }//GEN-LAST:event_txtSafetyStockLevelKeyReleased

    public void searchTableContents(String searchString) {
        DefaultTableModel currtableModel = (DefaultTableModel) table.getModel();
        //To empty the table before search
        currtableModel.setRowCount(0);
        //To search for contents from original table content
        for (Object rows : dtmVector) {
            Vector rowVector = (Vector) rows;
            for (Object column : rowVector) {
                if (column.toString().toLowerCase().contains(searchString.toLowerCase())) {
                    //content found so adding to table
                    currtableModel.addRow(rowVector);
                    break;
                }
            }

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbBrandName;
    private javax.swing.JComboBox<String> cmbCategoryName;
    private javax.swing.JComboBox<String> cmbProductType;
    private javax.swing.JComboBox<String> cmbSupplierId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtProductId;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtSafetyStockLevel;
    private javax.swing.JTextField txtSearchProduct;
    // End of variables declaration//GEN-END:variables
}
